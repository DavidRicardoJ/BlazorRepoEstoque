@using BlazorRepoEstoque.Shared.SharedState
@inject IJSRuntime js
@inject IEncryptString encrypt
@inject ManagerStateAppService _managerStateAppService

<MudPaper Width="100%" Height="100%" Elevation="5" Class="pa-5 d-flex align-content-center flex-column">
    <MudText Class="pa-3" Typo="Typo.h5" style="text-align: center;">Criar Script - Todos os Itens</MudText>
    <MudGrid>
        <MudItem xs="12" sm="12">
            @if (alert)
            {
                <MudPaper Elevation="15" Class="d-flex align-center">
                    <MudAlert Severity="Severity.Warning" Elevation="10">@message</MudAlert>
                </MudPaper>
            }
            <MudCard>
                <MudCardContent Style="width:100%">
                    <MudText Typo="Typo.body1">Total de itens: @ListReposicao.Count()</MudText>

                </MudCardContent>
                <MudCardActions>
                    <MudButton Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto" @onclick="OnValidSubmit">Gerar Script</MudButton>
                </MudCardActions>
            </MudCard>
        </MudItem>
    </MudGrid>
</MudPaper>
@if (messageBox)
{
    <MessageBox Aviso="@aviso" Titulo="@titulo" okButton="CloseMsgBox"></MessageBox>
}

@code {

    bool messageBox = false;
    string titulo;
    string aviso;

    string fileName = "scriptRobotTodos.txt";

    string message;
    private bool alert = false;
   
    private IReadOnlyList<ReposicaoEstoque> ListReposicao { get; set; } = new List<ReposicaoEstoque>();

    protected override void OnInitialized()
    {
        ListReposicao = _managerStateAppService.GetListReposicaoComFiltro();
    }


    private void OnValidSubmit()
    {
        if (VerificaLogin() is false) return;

        _managerStateAppService.SetListReposicaoFinal(_managerStateAppService.GetListReposicaoComFiltro());

        var script = _managerStateAppService.GetScriptRobot();

        DownloadFile(fileName, encrypt.CriptografarTextoAES(script));
        MessageSucess();
        StateHasChanged();
    }

    private void MessageSucess()
    {
        messageBox = true;
        titulo = "Script";
        aviso = "O Script foi criado com sucesso.";
    }

    private bool VerificaLogin()
    {
        if (_managerStateAppService.loginUsuarioMV.IsValidLogin is false)
        {
            messageBox = true;
            titulo = "Login";
            aviso = "Preencha os dados de acesso ao MV";
            return false;
        }
        return true;
    }

    private void CloseMsgBox()
    {
        messageBox = false;
        StateHasChanged();
    }

    public async void DownloadFile(string fileName, string Content)
    {
        await js.InvokeAsync<object>("saveFile", fileName, Content);
    }
}