@inherits LayoutComponentBase

<MudThemeProvider @bind-IsDarkMode="_isDarkMode" Theme="_currentTheme" />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudRTLProvider RightToLeft="@_rightToLeft">
        <MudAppBar Elevation="25">
            <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
            <MudHidden Breakpoint="Breakpoint.SmAndUp" Invert="true">
                <MudText Typo="Typo.h5" Class="mudblazor-appbar-brand-text">Reposição de Estoque</MudText>
            </MudHidden>
            <MudSpacer />
            <MudSpacer />
            <MudHidden Breakpoint="Breakpoint.MdAndUp" Invert="true">
                <MudTooltip Text="Toggle light/dark theme">
                    <MudIconButton Icon="@Icons.Material.Filled.Brightness4" Color="Color.Inherit" OnClick="@((e) => ToggleDarkMode())" />
                </MudTooltip>
                <MudTooltip Text="Toggle right-to-left/left-to-right">
                    <MudIconButton Icon="@Icons.Material.Filled.FormatTextdirectionRToL" Color="Color.Inherit" OnClick="@((e) => RightToLeftToggle())" />
                </MudTooltip>
            </MudHidden>
            <MudHidden Breakpoint="Breakpoint.SmAndDown" Invert="true">
                <MudMenu Icon="@Icons.Material.Filled.Settings" Color="Color.Inherit" Dense="true" Direction="Direction.Right" OffsetY="true">
                    <div class="px-2">
                        <MudIconButton Icon="@Icons.Material.Filled.Brightness4" Color="Color.Inherit" OnClick="@((e) => ToggleDarkMode())" />
                        <MudIconButton Icon="@Icons.Material.Filled.FormatTextdirectionRToL" Color="Color.Inherit" OnClick="@((e) => RightToLeftToggle())" />
                    </div>
                </MudMenu>
            </MudHidden>
        </MudAppBar>

        <MudDrawer @bind-Open="_drawerOpen" Elevation="25" Class="mudblazor-appbar-band">
            <MudDrawerHeader Class="mudblazor-brand" LinkToIndex="true">
                <img src="/images/logoStorage.png" alt="logo" width="100px" height="100%" />
            </MudDrawerHeader>
            <NavMenu />
        </MudDrawer>
    </MudRTLProvider>
    <MudMainContent Class="mudblazor-main-content">
        <MudContainer MaxWidth="MaxWidth.Large">
            @Body
        </MudContainer>
        <MudScrollToTop TopOffset="400">
            <MudFab Icon="@Icons.Material.Filled.KeyboardArrowUp" Color="Color.Primary" />
        </MudScrollToTop>
    </MudMainContent>
</MudLayout>

@code {
    private bool _drawerOpen = false;
    private bool _rightToLeft = false;
    private bool _isDarkMode = false; // Controla o modo escuro

    private readonly MudTheme _currentTheme = new MudTheme()
        {
            PaletteLight = new PaletteLight() // Tema claro (opcional, personalize se necessário)
            {
                Primary = "#007bff",
                Background = "#ffffff",
                AppbarBackground = "#007bff",
                TextPrimary = "#000000"
            },
            PaletteDark = new PaletteDark() // Tema escuro
            {
                Black = "#27272f",
                Background = "#32333d",
                BackgroundGray = "#27272f",
                Surface = "#373740",
                DrawerBackground = "#27272f",
                DrawerText = "rgba(255,255,255, 0.50)",
                AppbarBackground = "#27272f",
                AppbarText = "rgba(255,255,255, 0.70)",
                TextPrimary = "rgba(255,255,255, 0.70)",
                TextSecondary = "rgba(255,255,255, 0.50)",
                ActionDefault = "#adadb1",
                ActionDisabled = "rgba(255,255,255, 0.26)",
                ActionDisabledBackground = "rgba(255,255,255, 0.12)",
                DrawerIcon = "rgba(255,255,255, 0.50)"
            }
        };

    protected override void OnInitialized()
    {
        _isDarkMode = false; // Inicia no modo claro por padrão
    }

    private void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    private void RightToLeftToggle()
    {
        _rightToLeft = !_rightToLeft;
    }

    private void ToggleDarkMode()
    {
        _isDarkMode = !_isDarkMode; // Alterna entre claro e escuro
    }
}