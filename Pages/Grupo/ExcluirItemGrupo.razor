@page "/excluiritemgrupo"
@using BlazorRepoEstoque.Services.Interfaces
@inject IGrupoServices grupoService
@inject NavigationManager navigation



<MudPaper Width="100%" Height="100%" Elevation="5" Class="pa-5 d-flex align-content-center flex-column" Style="margin-top:35px;">
    <MudText Class="pa-3" Typo="Typo.h5" style="text-align: center; margin-top: 30px;">Excluir Item De Um Grupo</MudText>

    <MudDivider Style="margin: 20px;color: blue;"></MudDivider>
    <MudCard Style="margin-top: 30px;">
        <MudCardContent Style="width:100%">
            <MudSelect T="string" Placeholder="Escolha o grupo de medicamentos" AnchorOrigin="Origin.BottomCenter" MultiSelection="false"
                       @bind-Value="@nameGrupo">
                @if (NomesGrupos != null)
                {
                    foreach (var grupo in NomesGrupos)
                    {
                        <MudSelectItem Value="@grupo" />
                    }
                }
            </MudSelect>

            <MudDivider Style="margin: 20px; color: blue;"></MudDivider>

            <MudSelect T="string" Placeholder="Escolha o item do grupo" AnchorOrigin="Origin.BottomCenter"
                       MultiSelection="true" @onclick="OnChangeNameGrupo" SelectedValues="ListItemSelect">
                @if (ListItemGrupo != null)
                {
                    foreach (var grupo in ListItemGrupo)
                    {
                        <MudSelectItem Value="@grupo.CodigoMV.ToString()" />
                    }
                }
            </MudSelect>
        </MudCardContent>
        <MudCardActions Class="justify-end">
            <MudButton Style="margin-top: 25px;" Variant="Variant.Filled" Color="Color.Error" OnClick="OnButtonClicked">Excluir Item</MudButton>
        </MudCardActions>
    </MudCard>
</MudPaper>
@if (messageBox)
{
    <MessageBox Aviso="@aviso" Titulo="@titulo" okButton="CloseMsgBox"></MessageBox>
}

@code {
    [Inject] private IDialogService DialogService { get; set; }

    public List<string> NomesGrupos { get; set; }
    private List<Grupo> ListGrupos { get; set; }
    private List<Grupo> ListItemGrupo { get; set; }
    private HashSet<string> ListItemSelect { get; set; }
    string nameGrupo;

    
    bool messageBox = false;
    string titulo;
    string aviso;

    protected override async void OnInitialized()
    {
        AtualizaNomeGrupo();
        ListGrupos = await grupoService.GetAllGrupos();
    }

    private async void AtualizaNomeGrupo()
    {
        NomesGrupos = await CriaListaNomeGrupos();
    }


    private async Task<List<string>> CriaListaNomeGrupos() => await grupoService.GetListaNomeGrupos();

    private void OnChangeNameGrupo()
    {
        if (nameGrupo != null)
        {
            ListItemGrupo = ListGrupos.Where(x => x.NomeGrupo.Equals(nameGrupo)).ToList();
            StateHasChanged();
        }
    }

    private async void OnButtonClicked()
    {
        if (VerificaEscolhadeItem() is false) return;

        bool? result = await DialogService.ShowMessageBox(
            "Atenção",
            "Confirma a exclusão?",
            yesText: "Excuir Itens", cancelText: "Cancelar");

        if (result != null) DeleteItemGrupo(nameGrupo, ListItemSelect);
        StateHasChanged();
    }

    private bool VerificaEscolhadeItem()
    {
        if (ListItemSelect == null || ListItemSelect.Count == 0)
        {
            messageBox = true;
            titulo = "Excluir Itens";
            aviso = "Escolha o grupo e o item a ser excluido.";
            return false;
        }
        return true;
    }

    private async void DeleteItemGrupo(string nameGrupo, HashSet<string> ItensSelected)
    {
        List<Grupo> ListItensSelected = new();
        foreach (var item in ItensSelected)
        {
            var grupoSelected = ListItemGrupo.FirstOrDefault(x => x.NomeGrupo == nameGrupo && x.CodigoMV == int.Parse(item));
            if (grupoSelected is not null) ListItensSelected.Add(grupoSelected);
        }
        var result = grupoService.DeleteItemGrupo(ListItensSelected);

        if (result.IsCompletedSuccessfully)
        {
            bool? choice = await DialogService.ShowMessageBox(
            "Excluido",
            "Item excluido com sucesso!",
            yesText: "Ok");

            if (choice != null) navigation.NavigateTo("/");
        }
        else
        {
           bool? choice = await DialogService.ShowMessageBox(
            "Falha",
            "Falha na operação.",
            yesText: "Ok"); 
        }
    }

    private void CloseMsgBox()
    {
        messageBox = false;
        StateHasChanged();
    }

}
